const expand = require("@blisp/expander/expand")

// (. console log) -> console.log
// (get cosole "log") -> console["log"]
function MemberExpression() {
  return {
    type: "MemberExpression",
    object: expand(form.arguments[0], env),
    property:
      form.callee.name === "."
        ? form.arguments[1]
        : expand(form.arguments[1], env),
    computed: form.callee.name === "get",
    loc: form.loc,
  }
}

MemberExpression.type = "MemberExpression"
MemberExpression.helpers = {
  nth(form, n) {
    switch (n) {
      case 0:
        return form.copmuted
          ? { type: "Identifier", name: "get" }
          : { type: "Identifier", name: "." }
      case 1:
        return form.object
      case 2:
        return form.property
    }
  },
  length() {
    return 3
  },
}

module.exports = { ".": MemberExpression, get: MemberExpression }
