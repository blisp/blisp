const compile = require("@blisp/compiler/compile")
const { functionExpression } = require("@babel/types")

function FunctionExpression(form) {
  return functionExpression(
    form[1].valueOf() === Symbol.for("undefined")
      ? undefined
      : compile.call(this, form[1]),
    form[2].map(compile.bind(this)),
    compile.call(this, form[3]),
    form[4] && form[4].valueOf(),
    form[5] && form[5].valueOf()
  )
}

// (function undefined () (block)) -> function () { }
// (function id () (block)) -> function id () {}
module.exports = {
  [Symbol.for("#%function")]: FunctionExpression,
}
