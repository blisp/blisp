const {
  isExpression,
  blockStatement,
  expressionStatement,
} = require("@babel/types")
const compile = require("@blisp/compiler/compile")

function BlockStatement(form) {
  return blockStatement(
    form.slice(1).map((stmt) => {
      const compiled = compile.call(this, stmt)
      if (isExpression(compiled)) {
        switch (compiled.type) {
          case "FunctionExpression":
            // TODO: verify id
            return { ...compiled, type: "FunctionDeclaration" }
          default:
            return expressionStatement(compiled)
        }
      }
      return compiled
    })
  )
}

module.exports = { [Symbol.for("#%block")]: BlockStatement }
