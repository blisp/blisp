// value { scopes: Set, binding: () => | identifier}
// bindings: [[identifier, binding]]
const resolveCandidates = require("./resolveCandidates")
module.exports = function expectEnv(env, bindings) {
  return bindings.reduce(
    (innerEnv, [identifier, binding]) => {
      if (!innerEnv[identifier]) {
        innerEnv[identifier] = []
      }
      const existingBindings = resolveCandidates(
        identifier,
        innerEnv,
        binding.scopes
      )
      innerEnv[identifier].push(
        existingBindings.length > 0 && typeof binding === "object"
          ? { ...binding, name: `${binding.name}_${existingBindings.length}` }
          : binding
      )
      return innerEnv
    },
    { ...env }
  )
}
