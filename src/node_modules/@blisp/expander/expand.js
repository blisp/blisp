const utils = require("@babel/types/lib/definitions/utils")
const defineType = utils.default
const assertValueType = utils.assertValueType
const syntaxToDatum = require("./syntaxToDatum")

function expand(form, env) {
  if (form.compile) {
    return form
  }
  if (Array.isArray(form)) {
    const first = expand(form[0], env)
    if (first && first.valueOf() === Symbol.for("quote")) {
      return form[1]
    }
    const macro = resolve(first, env)
    if (typeof macro === "function") {
      return expand(macro([first, ...form.slice(1)], env), env)
    }
    return env.expandPrimitive([first, ...form.slice(1)])
  }
  return env.expandPrimitive(form)
}

module.exports = expand
