const peekChar = require("./peek-char")
const readSymbol = require("./read-symbol")
const readTrivia = require("./read-trivia")
const syntax = require("./syntax")
const InputStream = require("./input-stream")
const utils = require("@babel/types/lib/definitions/utils")
const defineType = utils.default
const assertValueType = utils.assertValueType

// TODO: Is there a better place to load this?
defineType("SymbolLiteral", {
  builder: ["name"],

  aliases: ["Expression", "PatternLike", "LVal", "TSEntityName"],

  fields: {
    name: {
      validate: assertValueType("string"),
    },

    optional: {
      validate: assertValueType("boolean"),

      optional: true,
    },
  },
})

let readTable

module.exports = function read(stream) {
  // TODO: How to load initial read table
  if (!readTable) {
    readTable = require("./read-table")
  }
  if (typeof stream === "string") {
    return read(new InputStream(stream))
  }
  // const start = stream.pos
  let char = peekChar(stream)
  const trivia = readTrivia(stream, char)
  const triviaEnd = stream.pos
  if (stream.eof()) {
    return syntax(trivia, undefined, 0)
  }
  char = peekChar(stream)
  const reader = readTable[char] || readSymbol
  return syntax(reader(stream, char), stream.pos - triviaEnd, trivia)
}
