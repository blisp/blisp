const { functionExpression, isIdentifier } = require("@babel/types")
const expand = require("@blisp/expander/expand")

// (function foo (bar) (block (return bar)))
module.exports = function fn(syntax, env) {
  const first = expand(syntax.elements[1], env)
  const [id, params, body] = isIdentifier(first)
    ? [first, syntax.elements[2], syntax.elements[3]]
    : [undefined, syntax.elements[1], syntax.elements[2]]
  return functionExpression(
    id,
    params.elements.map((param) => expand(param, env)),
    expand(body, env)
  )
}
