const expand = require("@blisp/expander/expand")
const { variableDeclarator, variableDeclaration } = require("@babel/types")
const syntaxToDatum = require("@blisp/expander/syntaxToDatum")

module.exports = function declare(syntax, env) {
  const form = syntaxToDatum(syntax)
  const kind = expand(form[1], env)
  // TODO: syntax to datum for identifiers
  return variableDeclaration(
    kind.name,
    form.slice(2).map((decl) => {
      const form = syntaxToDatum(decl)
      const lval = expand(form[0], env)
      const init = form[1] && expand(form[1])
      return variableDeclarator(lval, init)
    })
  )
}
